var rpComponents;!function(e){var r;!function(r){"use strict";var t=function(){function e(e,r,t){this.$scope=e,this.clusterChartService=r,this.clusterService=t}return e.$inject=["$scope","clusterChartService","clusterService"],e}();r.ClusterChartCtrl=t;var n=function(){function e(e,r){this.$http=e,this.$rootScope=r}return e.prototype.hideChart=function(){this.$rootScope.$broadcast("chart.update",{targetChartId:!1})},e.prototype.buildChart=function(e){document.getElementById("cluster-summary-chart-d3").innerHTML="",this.$rootScope.$broadcast("chart.update",{targetChartId:"clusterSummaryChart"});var r=[];angular.forEach(e.properties,function(e,t){var n=[];angular.forEach(e,function(e,r){n.push({attributeName:r,count:e})}),r.push({propertyName:t,data:n})});var t,n,i,s,o=1250,a=255,c=r.length<7?r.length:4;.35*document.body.clientHeight>a&&document.body.clientWidth>o?(i={top:0,right:10,bottom:0,left:10},t=document.body.clientWidth/c-(2*i.left+i.right),n=.35*document.body.clientHeight,s=20):(i={top:0,right:5,bottom:0,left:5},t=o/c-(2*i.left+i.right),n=a,s=15);var l=document.body.clientWidth-(2*i.left+i.right),p=Math.min(t,n)/2;r.forEach(function(e){function r(r,i,s,l){var d=u.selectAll("g.legendg").data(r).enter().append("g").attr("class","legendg").attr("transform",function(e,r){return"translate("+-(t/2.3)+","+(r*(k+C)-n/4)+")"}),h=d.append("rect").attr("x",45).attr("width",k).attr("height",k).attr("class","legend").style("fill",function(e,r){return c(e.attributeName)}),g=d.append("text").attr("x",65).attr("y",6).attr("dy",".35em").style("text-anchor","start").text(function(e){var r=(p-20)/5;return e.attributeName.length>r?e.attributeName.substring(0,r)+"...":e.attributeName});if(h.append("svg:title").text(function(r){var t=d3.sum(e.data.map(function(e){return e.count}));return r.attributeName+" ("+Math.round(1e3*r.count/t)/10+"%)"}),g.append("svg:title").text(function(r){var t=d3.sum(e.data.map(function(e){return e.count}));return r.attributeName+" ("+Math.round(1e3*r.count/t)/10+"%)"}),l>1){var v=u.append("g").attr("class","pageNo").attr("transform","translate(-10,"+((i+1)*(k+C)-n/4)+")");v.append("text").text(s+"/"+l).attr("dx",".25em");var f=u.append("g").attr("class","prev").attr("transform","translate(-20,"+((i+1.5)*(k+C)-n/4)+")").on("click",o).style("cursor","pointer"),m=u.append("g").attr("class","next").attr("transform","translate(0,"+((i+1.5)*(k+C)-n/4)+")").on("click",a).style("cursor","pointer");m.append("polygon").style("stroke","#000").style("fill","#000").attr("points","0,0, 20,0, 10,10"),f.append("polygon").style("stroke","#000").style("fill","#000").attr("points","0,10, 20,10, 10,0"),s==l?(m.style("opacity","0.3"),m.on("click","").style("cursor","")):1==s&&(f.style("opacity","0.3"),f.on("click","").style("cursor",""))}}function o(){S--,u.selectAll("g.legendg").remove(),u.select(".pageNo").remove(),u.select(".prev").remove(),u.select(".next").remove();for(var t=(S-1)*f,n=t+f,i=[],s=0;s<e.data.length;s++)s>=t&&n>s&&i.push(e.data[s]);r(i,f,S,m)}function a(){S++,u.selectAll("g.legendg").remove(),u.select(".pageNo").remove(),u.select(".prev").remove(),u.select(".next").remove();for(var t=(S-1)*f,n=t+f,i=[],s=0;s<e.data.length;s++)s>=t&&n>s&&i.push(e.data[s]);r(i,f,S,m)}var c=d3.scale.category20(),u=d3.select("#cluster-summary-chart-d3").append("svg").attr("width",t).attr("height",n).style("margin-left",i.left+"px").style("margin-right",i.right+"px").append("g").attr("transform","translate("+t/2+","+(n/2+10)+")"),d=d3.svg.arc().innerRadius(p-s).outerRadius(p),h=d3.layout.pie().value(function(e){return e.count}).sort(null),g=d3.select("#cluster-summary-chart-d3").append("div").attr("class","cluster-summary-tooltip");g.append("div").attr("class","attribute"),g.append("div").attr("class","count"),g.append("div").attr("class","percent");var v=u.selectAll("path").data(h(e.data)).enter().append("path").attr("d",d).attr("fill",function(e,r){return c(e.data.attributeName)}).each(function(e){this._current=e});v.on("mouseover",function(r){var t=d3.sum(e.data.map(function(e){return e.count})),n=Math.round(1e3*r.data.count/t)/10;g.select(".attribute").html(r.data.attributeName),g.select(".count").html("Count: "+r.data.count),g.select(".percent").html("Percent: "+n+"%"),g.style("display","block")}),v.on("mouseout",function(){g.style("display","none")}),v.on("mousemove",function(e){var r=d3.event.pageX>l-180?d3.event.pageX-180:d3.event.pageX,t=d3.event.pageY>document.body.clientHeight-120?d3.event.pageY-100:d3.event.pageY+10;g.style("top",t+"px").style("left",r+"px")}),u.append("g").attr("class","cluster-summary-chart-title").append("text").attr("x",0).attr("y",-(n/2+7)).attr("dy",".71em").style("text-anchor","middle").style("fill","#000").style("font-weight","bold").text(e.propertyName);var f,m,S,y=e.data.length,k=15,C=6,w=(k+C)*y;if(w/p>1){f=Math.floor(p/(k+C)),m=Math.ceil(y/f),S=1;for(var b=(S-1)*f,x=b+f,P=[],M=0;M<e.data.length;M++)M>=b&&x>M&&P.push(e.data[M]);r(P,f,S,m)}else r(e.data,Math.floor(p/(k+C)),1,1)}),document.getElementById("cluster-summary-chart-d3").style.display="none",setTimeout(function(){document.getElementById("cluster-summary-chart-loading").style.display="none",document.getElementById("cluster-summary-chart-d3").style.display="block"},1500)},e.$inject=["$http","$rootScope"],e}();r.ClusterChartService=n,angular.module("explorer.rockproperties.charts",[]).factory("clusterChartService",["$http","$rootScope",function(r,t){return new e.chartService.ClusterChartService(r,t)}]).controller("clusterChartCtrl",t).directive("clusterChartSummary",function(){return{templateUrl:"rockprops/cluster-summary.html",controller:t,controllerAs:"clusterChartVM"}})}(r=e.chartService||(e.chartService={}))}(rpComponents||(rpComponents={}));var rpComponents;!function(e){var r;!function(r){"use strict";var t=function(){function e(){}return e.prototype.addSpinner=function(e){return function(){function r(e,t){e.transition().ease("linear").duration(t).attrTween("transform",function(){return d3.interpolateString("rotate(0)","rotate(360)")}),setTimeout(function(){r(e,t)},t)}var t=Math.min(e.width,e.height)/2,n=2*Math.PI,i=d3.svg.arc().innerRadius(.5*t).outerRadius(.9*t).startAngle(0),s=d3.select(e.container).append("svg").attr("id",e.id).attr("width",e.width).attr("height",e.height).append("g").attr("transform","translate("+e.width/2+","+e.height/2+")");s.append("path").datum({endAngle:.33*n}).style("fill","#4D4D4D").attr("d",i).call(r,1500)}},e}();r.LoadingSpinnerService=t,angular.module("explorer.rockproperties.spinner",[]).factory("loadingSpinnerService",[function(){return new e.spinnerService.LoadingSpinnerService}])}(r=e.spinnerService||(e.spinnerService={}))}(rpComponents||(rpComponents={}));var rpComponents;!function(e){var r;!function(r){"use strict";var t=function(){function e(e,r,t){this.$q=e,this.$http=r,this.rocksConfigService=t}return e.prototype.getWfsFeatureTypeNames=function(){var e=this,r=this.$q.defer();return this.$http.get(this.rocksConfigService.config.geoserverWfsUrl+"?request=GetCapabilities&service=wfs&version="+this.rocksConfigService.config.geoserverWfsVersion).success(function(t,n,i,s){var o=e.getFeatureTypeNamesFromWfsCapsJson(e.xmlToJson($.parseXML(t)));r.resolve(o)}).error(function(e){console.log("GetCapabilities request failed"),console.log(e),r.error()}),r.promise},e.prototype.getFeatureTypeNamesFromWfsCapsJson=function(e){for(var r=e["wfs:WFS_Capabilities"].FeatureTypeList.FeatureType,t=[],n=0;n<r.length;n++)t.push(r[n].Name["#text"]);return t},e.prototype.getWmsLayerNames=function(){var e=this,r=this.$q.defer();return this.$http.get(this.rocksConfigService.config.geoserverWmsUrl+"?request=GetCapabilities&service=wms&version="+this.rocksConfigService.config.geoserverWmsVersion).success(function(t,n,i,s){e.wmsLayerNames=e.getLayerNamesFromWmsCapsJson(e.xmlToJson($.parseXML(t))),r.resolve(e.wmsLayerNames)}).error(function(e){console.log("GetCapabilities request failed"),console.log(e),r.error()}),r.promise},e.prototype.getLayerNamesFromWmsCapsJson=function(e){for(var r=e.WMS_Capabilities.Capability.Layer.Layer,t=[],n=0;n<r.length;n++)t.push(r[n].Name["#text"]);return t},e.prototype.xmlToJson=function(e){var r={};if(1==e.nodeType){if(e.attributes.length>0){r["@attributes"]={};for(var t=0;t<e.attributes.length;t++){var n=e.attributes.item(t);r["@attributes"][n.nodeName]=n.nodeValue}}}else 3==e.nodeType&&(r=e.nodeValue);if(e.hasChildNodes())for(var i=0;i<e.childNodes.length;i++){var s=e.childNodes.item(i),o=s.nodeName;if("undefined"==typeof r[o])r[o]=this.xmlToJson(s);else{if("undefined"==typeof r[o].push){var a=r[o];r[o]=[],r[o].push(a)}r[o].push(this.xmlToJson(s))}}return r},e.$inject=["$q","$http","rocksConfigService"],e}();r.GwsUtilService=t,angular.module("explorer.rockproperties.gwsutil",[]).factory("gwsUtilService",["$q","$http","rocksConfigService",function(r,t,n){return new e.gwsUtilService.GwsUtilService(r,t,n)}])}(r=e.gwsUtilService||(e.gwsUtilService={}))}(rpComponents||(rpComponents={}));var rpComponents;!function(e){var r;!function(r){"use strict";var t=function(){function e(e,r,t,n,i,s,o){var a=this;this.$q=e,this.$http=r,this.$rootScope=t,this.loadingSpinnerService=n,this.rocksClipShipService=i,this.rocksConfigService=s,this.gwsUtilService=o,this.propertyQuery="",this.$inject=["$q","$http","$rootScope","loadingSpinnerService","rocksClipShipService","rocksConfigService","gwsUtilService"],this.$rootScope.$on("rocks.config.ready",function(){a.baseUrl=a.rocksConfigService.config.geoserverWfsUrl+"?",angular.forEach(a.rocksConfigService.config.geoserverWfsExportParams,function(e,r){a.baseUrl+=r+"="+e+"&"}),a.baseUrl=a.baseUrl.slice(0,-1),a.gwsUtilService.getWfsFeatureTypeNames().then(function(e){a.wfsLayerNames=e})})}return e.prototype.startClipShip=function(e,r,t){var n=this;this.loading=!0,this.loadingSpinner||(this.loadingSpinner=this.loadingSpinnerService.addSpinner({width:80,height:80,container:"#rock-clip-ship-loading",id:"clip-ship-spinner"}),this.loadingSpinner());for(var i=[],s=0;s<e.length;s++)e[s].isSelected&&i.push(e[s].name);if("csv"===r){var o=new JSZip;if(JSZip.support.blob){for(var a=[],s=0;s<this.wfsLayerNames.length;s++){var c=this.buildQuery(i,t,r,[this.wfsLayerNames[s]]),l=this.$http.get(c);a.push(l)}this.$q.all(a).then(function(e){for(var r=0;r<e.length;r++){var t=(e[r].data.match(/\n/g)||[]).length;if(t>1){var i=n.wfsLayerNames[r].split(" ").join("-");o.file(i+".csv",e[r].data+"\n")}}var s=o.generate({type:"blob"});saveAs(s,"rocks-export.zip"),n.loading=!1,n.rocksClipShipService.step="startDraw"})}else{for(var s=0;s<this.wfsLayerNames.length;s++)window.open(this.buildQuery(i,t,r,[this.wfsLayerNames[s]]));this.loading=!1}}else this.exportUrl=this.buildQuery(i,t,r,this.wfsLayerNames),this.loading=!1},e.prototype.buildQuery=function(e,r,t,n){function i(e){for(var r in e)if(e.hasOwnProperty(r))return!1;return!0}var s,o=this.getTypeNamesQuery(n),a="&CQL_FILTER=BBOX(GEOM,"+r.west+","+r.south+","+r.east+","+r.north+")",c="",l={},p="&outputFormat="+t,u=!i(l),d=l.hasOwnProperty("PROPERTY"),h=!(!d||1!==Object.keys(l).length);return u&&d?(this.propertyQuery="%20AND%20PROPERTY='"+l.PROPERTY+"'",h||(c=this.getFilters(l))):u?(this.propertyQuery=this.getPropertyQuery(e),h||(c=this.getFilters(l))):this.propertyQuery=this.getPropertyQuery(e),ga("send","event","explorer-rock-properties","click","clipship data export: "+t),s=this.baseUrl+o+p+a+c+this.propertyQuery},e.prototype.getFilters=function(e){var r="%20AND%20";for(var t in e)"PROPERTY"!==t&&(r=r.concat(t+"='"+e[t]+"'%20AND%20"));return r=r.substring(0,r.length-9)},e.prototype.getPropertyQuery=function(e){for(var r="%20AND%20(",t=0;t<e.length;t++)r=r.concat("PROPERTY='"+e[t]+"'%20OR%20");return r=r.substring(0,r.length-8),r=r.concat(")")},e.prototype.getTypeNamesQuery=function(e){for(var r="&typeName=",t=0;t<e.length;t++)r=r.concat(e[t]+",");return r=r.substring(0,r.length-1)},e}();r.QueryBuilder=t,angular.module("explorer.rockproperties.queryexport",[]).factory("rocksQueryBuilderExport",["$q","$http","$rootScope","loadingSpinnerService","rocksClipShipService","rocksConfigService","gwsUtilService",function(r,t,n,i,s,o,a){return new e.queryBuilderExport.QueryBuilder(r,t,n,i,s,o,a)}])}(r=e.queryBuilderExport||(e.queryBuilderExport={}))}(rpComponents||(rpComponents={}));var rpComponents;!function(e){var r;!function(r){"use strict";var t=function(){function e(e,r,t,n){this.$scope=e,this.clusterService=r,this.rocksPanelService=t,this.rocksFiltersService=n}return e.$inject=["$scope","clusterService","rocksPanelService","rocksFiltersService"],e}();r.RocksClusterFilterCtrl=t;var n=function(){function e(){this.filterQuery=""}return e}();r.ClusterFilterState=n;var i=function(){function e(e,r,t,n,i){var s=this;this.$http=e,this.$rootScope=r,this.rocksConfigService=t,this.clusterService=n,this.clusterFilterState=i,this.clusterFilters={},this.$inject=["$http","$rootScope","rocksConfigService","clusterService","clusterFilterState"],this.$rootScope.$on("rocks.config.ready",function(){e.get(s.rocksConfigService.config.filterNamesServiceUrl).then(function(e){s.filters=e.data;for(var r=0;r<s.filters.length;r++)if("PROPERTY"==s.filters[r].filterType){for(var t=angular.copy(s.filters[r].filterOptions),n=0;n<t.length;n++)t[n]={name:t[n],isSelected:!1};var i=angular.copy(s.filters[r]);i.filterOptions=t,s.exportProperties=i}}),function(e){console.log("Failed to get rock props filters"),console.log(e)}})}return e.prototype.setAllExportSelected=function(e){for(var r=0;r<this.exportProperties.filterOptions.length;r++)this.exportProperties.filterOptions[r].isSelected=e},e.prototype.applyFilters=function(){this.clusterFilterState.filterQuery=this.buildFilterQuery(),this.clusterService.reCluster(),ga("send","event","explorer-rock-properties","click","cluster filters applied")},e.prototype.buildFilterQuery=function(){for(var e="",r=0;r<this.filters.length;r++)this.filters[r].hasOwnProperty("ClusterOption")&&this.filters[r].ClusterOption&&(e=e+"&filter="+encodeURIComponent(this.filters[r].filterType+"="+this.filters[r].ClusterOption));return e},e.prototype.clearFilters=function(){for(var e=0;e<this.filters.length;e++)this.filters[e].hasOwnProperty("ClusterOption")&&(this.filters[e].ClusterOption=!1);this.clusterFilterState.filterQuery="",this.clusterService.reCluster()},e}();r.RocksFiltersService=i,angular.module("explorer.rockproperties.clusterfilters",[]).controller("rocksClusterFilterCtrl",t).directive("rocksClusterFilters",function(){return{templateUrl:"rockprops/cluster-filters.html",controller:t,controllerAs:"rocksClusterFilterVM"}}).factory("rocksFiltersService",["$http","$rootScope","rocksConfigService","clusterService","clusterFilterState",function(r,t,n,i,s){return new e.filters.RocksFiltersService(r,t,n,i,s)}]).factory("clusterFilterState",[function(){return new e.filters.ClusterFilterState}])}(r=e.filters||(e.filters={}))}(rpComponents||(rpComponents={}));var rpComponents;!function(e){var r;!function(r){"use strict";var t=function(){function e(e,r,t,n,i,s){this.$scope=e,this.$timeout=r,this.rocksClipShipService=t,this.rocksPanelService=n,this.rocksFiltersService=i,this.rocksQueryBuilderExport=s}return e.prototype.startClipShip=function(){var e=this;this.$timeout(function(){e.rocksClipShipService.step="download",e.rocksQueryBuilderExport.startClipShip(e.rocksFiltersService.exportProperties.filterOptions,e.rocksClipShipService.targetFormat,e.rocksClipShipService.targetExtent)})},e.$inject=["$scope","$timeout","rocksClipShipService","rocksPanelService","rocksFiltersService","rocksQueryBuilderExport"],e}();r.RocksClipShipCtrl=t;var n=function(){function e(e,r,t){var n=this;this.$rootScope=e,this.rocksFiltersService=r,this.rocksConfigService=t,this.step="startDraw",this.isDrawing=!1,this.$inject=["$rootScope","rocksFiltersService","rocksConfigService"],this.$rootScope.$on("rocks.config.ready",function(){n.exportFormats=n.rocksConfigService.config.geoserverWfsExportFormats}),this.$rootScope.$on("rocks.extent.ready",function(e,r){n.step="selectFeatures",n.targetExtent=r})}return e.prototype.startDraw=function(){this.isDrawing=!0,this.$rootScope.$broadcast("draw.extent.start","rocks.extent.ready")},e.prototype.openGeoserver=function(){var e=window.open(this.rocksConfigService.config.geoserverDashboardUrl,"_blank");e&&e.focus()},e.prototype.updateExportFormat=function(e){this.targetFormat=e},e}();r.RocksClipShipService=n,angular.module("explorer.rockproperties.clipship",[]).factory("rocksClipShipService",["$rootScope","rocksFiltersService","rocksConfigService",function(r,t,n){return new e.clipShipService.RocksClipShipService(r,t,n)}]).controller("rocksClipShipCtrl",t).directive("rocksClipShip",function(){return{templateUrl:"rockprops/clip-ship.html",controller:t,controllerAs:"rocksClipShipVM"}}).filter("noClipSelected",[function(e){return function(e){if(e){for(var r=0;r<e.length;r++)if(e[r].isSelected)return!1;return!0}}}])}(r=e.clipShipService||(e.clipShipService={}))}(rpComponents||(rpComponents={}));var rpComponents;!function(e){var r;!function(r){"use strict";var t=function(){function e(e,r,t,n){this.$scope=e,this.wmsPointsService=r,this.rocksPanelService=t,this.wmsInspectorState=n}return e.$inject=["$scope","wmsPointsService","rocksPanelService","wmsInspectorState"],e}();r.RocksWmsPointsCtrl=t;var n=function(){function e(e,r,t,n){var i=this;this.$rootScope=e,this.gwsUtilService=r,this.rocksConfigService=t,this.wmsInspectorState=n,this.inspectorEnabled=!0,this.masterChecked=!0,this.legendParamString="",this.$inject=["$rootScope","gwsUtilService","rocksConfigService","wmsInspectorState"],this.$rootScope.$on("rocks.config.ready",function(){i.init()})}return e.prototype.init=function(){var e=this;this.wmsServiceUrl=this.rocksConfigService.config.geoserverWmsUrl,this.viewer=this.rocksConfigService.viewer,this.restrictedBounds=Cesium.Rectangle.fromDegrees(109,-45,158,-8),this.legendParamString="?",angular.forEach(this.rocksConfigService.config.geoserverWmsLegendParams,function(r,t){e.legendParamString+=t+"="+r+"&"}),this.legendParamString=this.legendParamString.slice(0,-1)+"&LAYER=",this.gwsUtilService.getWmsLayerNames().then(function(r){e.layers=r,e.getLegendData()})},e.prototype.togglePoints=function(){return this.pointsVisible=!this.pointsVisible,this.wmsLayer?this.wmsLayer.show=this.pointsVisible:this.updatePointsLayer(),this.pointsVisible},e.prototype.toggleChecked=function(){this.masterChecked!=this.masterChecked;for(var e in this.legendData)this.legendData[e].isSelected=this.masterChecked},e.prototype.getLegendData=function(){this.legendData={};for(var e=0;e<this.layers.length;e++)this.legendData[this.layers[e]]={legendUrl:this.wmsServiceUrl+this.legendParamString+this.layers[e],isSelected:!0}},e.prototype.updatePointsLayer=function(){var e=[];for(var r in this.legendData)this.legendData.hasOwnProperty(r)&&this.legendData[r].isSelected===!0&&e.push(r);this.wmsLayer&&this.viewer.imageryLayers.remove(this.wmsLayer),ga("send","event","explorer-rock-properties","click","update wms points layer: "+e.toString()),this.wmsLayer=this.viewer.imageryLayers.addImageryProvider(new Cesium.WebMapServiceImageryProvider({url:this.wmsServiceUrl,layers:e.toString(),rectangle:this.restrictedBounds,parameters:{transparent:"true",format:"image/png"},enablePickFeatures:!1})),this.wmsLayer.alpha=.7},e}();r.WmsPointsService=n,angular.module("explorer.rockproperties.wmspoints",[]).factory("wmsPointsService",["$rootScope","gwsUtilService","rocksConfigService","wmsInspectorState",function(r,t,n,i){return new e.pointsService.WmsPointsService(r,t,n,i)}]).controller("rocksWmsPointsCtrl",t).directive("rocksWmsPointsLegend",function(){return{templateUrl:"rockprops/wms-points-panel.html",controller:t,controllerAs:"rocksWmsPointsVM"}})}(r=e.pointsService||(e.pointsService={}))}(rpComponents||(rpComponents={})),angular.module("explorer.rockproperties.templates",[]).run(["$templateCache",function(e){e.put("rockprops/clip-ship.html",'\r\n<div ng-show="rocksClipShipVM.rocksClipShipService.step == \'startDraw\'">\r\n	<h6 class="dis-inline">\r\n		1.\r\n		<button ng-click="rocksClipShipVM.rocksClipShipService.startDraw()" style="padding: 5px 10px;border-radius: 3px;border: none;">\r\n			Click here\r\n		</button>\r\n		to select an area on the map <i class="fa fa-scissors" style="font-size: 16px;"></i></h6>\r\n</div>\r\n\r\n\r\n<div ng-show="rocksClipShipVM.rocksClipShipService.step == \'selectFeatures\'">\r\n\r\n	<h6 class="dis-inline">2. Select features to download:</h6>\r\n\r\n	<div>\r\n\r\n		<!-- if we have active property filters, use them instead -->\r\n		<p ng-show="hasAnyFilter">\r\n			<i class="fa fa-info-circle"></i> Current filters will be applied to the exported data.\r\n		</p>\r\n\r\n		<div ng-hide="hasAnyFilter">\r\n\r\n			<div style="padding: 5px; margin-top: 10px; background: #f0f0f0; border-radius: 3px;">\r\n				<label>\r\n					<input\r\n						type="checkbox"\r\n						ng-model="masterCheck"\r\n						ng-disabled="hasPropertyFilter"\r\n						ng-change="rocksClipShipVM.rocksFiltersService.setAllExportSelected(masterCheck)" />\r\n					{{ masterCheck ? \'Deselect\' : \'Select\' }} All\r\n				</label>\r\n			</div>\r\n\r\n			<label style="margin-left: 25px;" class="checkbox" ng-repeat="property in rocksClipShipVM.rocksFiltersService.exportProperties.filterOptions">\r\n				<input\r\n					type="checkbox"\r\n					value="property.isSelected"\r\n					ng-model="property.isSelected"\r\n					ng-checked="masterCheck"\r\n					ng-disabled="hasPropertyFilter">\r\n				{{ property.name }}\r\n			</label>\r\n\r\n		</div>\r\n\r\n		<div style="margin: 20px 0px 20px 0px;">\r\n			<label title="Export Format">Export Format</label>\r\n			<select ng-change="rocksClipShipVM.rocksClipShipService.updateExportFormat(exportFormats.SelectedOption)"\r\n					ng-model="exportFormats.SelectedOption"\r\n					name="format"\r\n					ng-options="option for option in rocksClipShipVM.rocksClipShipService.exportFormats"\r\n					ng-class="form-control"\r\n					class="filter-input"\r\n					style="float: right; width: 160px;">\r\n				<option value="" class="">--select--</option>\r\n			</select>\r\n		</div>\r\n\r\n		<a ng-click="rocksClipShipVM.rocksClipShipService.openGeoserver()" style="font-size: 11px; margin-top: 20px; color: blue; text-decoration: underline;">\r\n			More Options via GeoServer Dashboard\r\n		</a>\r\n\r\n		<div style="margin-top: 20px;">\r\n			<button\r\n				type="button"\r\n				class="btn btn-default"\r\n				ng-click="rocksClipShipVM.rocksClipShipService.step = \'startDraw\'; rocksClipShipVM.rocksClipShipService.isDrawing = false"\r\n				title="Cancel Download"\r\n				style="width: 40%; float: left;">Cancel</button>\r\n			<button\r\n				type="button"\r\n				class="btn btn-default focusMe"\r\n				ng-click="rocksClipShipVM.startClipShip()"\r\n				style="width: 40%; float: right"\r\n				title="Select one or more reference feature classes before continuing."\r\n				ng-disabled="(rocksClipShipVM.rocksFiltersService.exportProperties.filterOptions | noClipSelected) || (!rocksClipShipVM.rocksClipShipService.targetFormat)">Next</button>\r\n		</div>\r\n\r\n	</div>\r\n\r\n</div>\r\n\r\n<div ng-show="rocksClipShipVM.rocksClipShipService.step == \'download\'">\r\n\r\n	<h6>3. Data Export:</h6>\r\n\r\n	<div ng-hide="rocksClipShipVM.rocksQueryBuilderExport.loading">\r\n\r\n		<p ng-show="rocksClipShipVM.rocksClipShipService.targetFormat === \'application/json\'" style="margin-top: 40px;">\r\n			<i class="fa fa-info-circle"></i> Once json has loaded, save page as a .json file.\r\n		</p>\r\n\r\n		<p class="warning-block" style="margin-top: 20px;">\r\n			<i class="fa fa-info-circle"></i> Large data sets may take several minutes to export.\r\n		</p>\r\n\r\n		<a\r\n			class="btn btn-default"\r\n			target="_blank"\r\n			href="{{rocksClipShipVM.rocksQueryBuilderExport.exportUrl}}"\r\n			ng-click="rocksClipShipVM.rocksClipShipService.step = \'startDraw\'; rocksClipShipVM.rocksClipShipService.isDrawing = false"\r\n			style="width: 100%; margin-top: 30px;"\r\n			role="button">\r\n			<i class="fa fa-download"></i> Download {{ rocksClipShipVM.rocksClipShipService.targetFormat }}\r\n		</a>\r\n\r\n		<a\r\n			class="btn btn-default"\r\n			href="javascript:;"\r\n			ng-click="rocksClipShipVM.rocksClipShipService.step = \'selectFeatures\'"\r\n			style="width: 100%; margin-top: 10px;"\r\n			role="button">\r\n			<i class="fa fa-arrow-left"></i> Back\r\n		</a>\r\n\r\n	</div>\r\n\r\n</div>\r\n\r\n<div id="rock-clip-ship-loading" ng-show="rocksClipShipVM.rocksQueryBuilderExport.loading">\r\n	<p>Preparing Data..</p>\r\n</div>'),e.put("rockprops/cluster-filters.html",'\r\n<!-- TODO plug into rock props filter service -->\r\n\r\n<div ng-hide="clusterInspectorVM.rocksPanelService.clustersEnabled">\r\n	Enable Cluster Features to apply filters.\r\n</div>\r\n\r\n<div ng-show="clusterInspectorVM.rocksPanelService.clustersEnabled">\r\n\r\n\r\n	<div ng-repeat="filter in rocksClusterFilterVM.rocksFiltersService.filters" style="padding-top:7px;position:relative; overflow-x: hidden;overflow-y: auto;">\r\n\r\n		<label style="font-size: 11px;" title="{{filter.filterLabel}}">{{filter.filterLabel}}</label>\r\n		<select\r\n				ng-model="filter.ClusterOption"\r\n				name="filter.filterType"\r\n				ng-options="option as option for option in filter.filterOptions"\r\n				ng-class=\'form-control\'\r\n				class=\'filter-input\'\r\n				style="float:left;width:100%;position:relative;">\r\n			<option value="" selected>--select--</option>\r\n		</select>\r\n\r\n	</div>\r\n\r\n	<div style="text-align: center;">\r\n		<a class="btn btn-default" style="margin: 10px;" ng-click="rocksClusterFilterVM.rocksFiltersService.applyFilters()" href="javascript:;">\r\n			<i class="fa fa-filter fa-lg"></i>\r\n			Apply\r\n		</a>\r\n\r\n		<a class="btn btn-default" style="margin: 10px;" ng-click="rocksClusterFilterVM.rocksFiltersService.clearFilters()" href="javascript:;">\r\n			<i class="fa fa-remove fa-lg"></i>\r\n			Clear\r\n		</a>\r\n\r\n		<p ng-show="filterResultCount()" style="text-align: left; margin: 10px; font-size: 14px;">\r\n			<strong>Record Count: </strong>\r\n			14320\r\n		</p>\r\n	</div>\r\n\r\n</div>\r\n'),e.put("rockprops/cluster-inspector.html",'\r\n<div ng-hide="clusterInspectorVM.rocksPanelService.clustersEnabled">\r\n	Enable Cluster Features to use the inspector tool.\r\n</div>\r\n\r\n<div ng-show="clusterInspectorVM.rocksPanelService.clustersEnabled">\r\n\r\n	<p>Click on a cluster to see:</p>\r\n\r\n	<label class="radio-inline">\r\n		<input\r\n			type="radio"\r\n			ng-model="clusterInspectorVM.clusterInspectorService.inspectMode"\r\n			value="CHART"> Summary charts\r\n	</label>\r\n	<label class="radio-inline">\r\n		<input\r\n			type="radio"\r\n			ng-model="clusterInspectorVM.clusterInspectorService.inspectMode"\r\n			value="LIST"> Results list\r\n	</label>\r\n\r\n	<div id="cluster-result-list-loading" style="padding-top: 10px; text-align: center;"></div>\r\n\r\n\r\n	<div ng-show="clusterInspectorVM.clusterInspectorService.listReady">\r\n\r\n		<div ng-if="clusterInspectorVM.clusterInspectorService.listFeatures.totalFeatures > 0" class="alert alert-success" style="margin-top: 30px;">\r\n			Features loaded: {{clusterInspectorVM.clusterInspectorService.pagingState.count}} of \r\n							{{clusterInspectorVM.clusterInspectorService.pagingState.total}}\r\n			<button ng-show="clusterInspectorVM.clusterInspectorService.pagingState.more()"  class="undecorated btn-sm"\r\n					style="float:right" ng-click="clusterInspectorVM.clusterInspectorService.loadNextListStep()">-More-</button>\r\n		</div>\r\n\r\n		<div ng-repeat="feature in clusterInspectorVM.clusterInspectorService.listFeatures.features" class="rocks-result-list-feature">\r\n\r\n			<table class="table table-hover table-striped">\r\n\r\n				<h5>ID: {{feature.id}}</h5>\r\n				<tbody>\r\n					<tr>\r\n						<td><strong>GEOM</strong></td>\r\n						<td>{{feature.geometry.coordinates[0]}}, {{feature.geometry.coordinates[1]}}</td>\r\n					</tr>\r\n					<tr ng-repeat="(key, value) in feature.properties">\r\n						<td><strong>{{key}}</strong></td>\r\n						<td>{{value}}</td>\r\n					</tr>\r\n				</tbody>\r\n\r\n			</table>\r\n		</div>\r\n\r\n		<div ng-show="clusterInspectorVM.clusterInspectorService.pagingState.more()">\r\n			<span>{{clusterInspectorVM.clusterInspectorService.pagingState.count}} of {{clusterInspectorVM.clusterInspectorService.pagingState.total}}</span>\r\n			<span style="float:right">\r\n				<button class="undecorated btn-sm" ng-click="clusterInspectorVM.clusterInspectorService.loadNextListStep()">-More-</button>\r\n			</span>\r\n		</div>\r\n\r\n	</div>\r\n\r\n</div>\r\n'),e.put("rockprops/cluster-summary.html",'<div id="clusterSummaryChart" ng-show="chartState.targetChartId == \'clusterSummaryChart\'">\r\n\r\n	<div class="btn-group" style="position: absolute;right: 10px;top: 10px;">\r\n		<button type="button" class="btn btn-default" title="Close charts" ng-click="clusterChartVM.clusterChartService.hideChart(); clusterChartVM.clusterService.clearHighlighted();">\r\n			<i class="fa fa-times-circle" role="presentation" style="font-size:16px; color:black"></i>\r\n		</button>\r\n	</div>\r\n\r\n	<div id="cluster-summary-chart-d3"></div>\r\n	<div id="cluster-summary-chart-loading"></div>\r\n\r\n</div>'),e.put("rockprops/control-panel.html",'<div>\r\n\r\n	<div class="rocks-accordion">\r\n		<div class="rocks-toggle-button" title="Show/hide cluster features">\r\n			<input\r\n				type="checkbox"\r\n				ng-model="controlPanelVM.rocksPanelService.clustersEnabled"\r\n				ng-change="controlPanelVM.rocksPanelService.toggleClusters()" />\r\n		</div>\r\n		<button class="title" ng-click="controlPanelVM.setTargetPanel(\'clusterFeatures\')">\r\n			<i class="fa fa-{{ controlPanelVM.targetPanel == \'clusterFeatures\' ? \'minus\' : \'plus\' }}"></i>\r\n			Cluster Features\r\n		</button>\r\n	</div>\r\n	<div class="rocks-accordion-content" ng-show="controlPanelVM.targetPanel == \'clusterFeatures\'">\r\n\r\n		<uib-tabset active="activeJustified" justified="true">\r\n			<uib-tab index="0" heading="Inspect" style="padding: 0px 0px 20px 0px;">\r\n				<rocks-cluster-inspector-panel></rocks-cluster-inspector-panel>\r\n			</uib-tab>\r\n			<uib-tab index="1" heading="Filter" style="padding: 0px 0px 20px 0px;">\r\n				<rocks-cluster-filters></rocks-cluster-filters>\r\n			</uib-tab>\r\n		</uib-tabset>\r\n\r\n	</div>\r\n\r\n	<div class="rocks-accordion">\r\n		<div class="rocks-toggle-button" title="Show/hide point features WMS layer">\r\n			<input\r\n				type="checkbox"\r\n				ng-model="controlPanelVM.rocksPanelService.pointsEnabled"\r\n				ng-change="controlPanelVM.rocksPanelService.togglePoints()" />\r\n		</div>\r\n		<div class="title" ng-click="controlPanelVM.setTargetPanel(\'pointFeatures\')">\r\n			<i class="fa fa-{{ controlPanelVM.targetPanel == \'pointFeatures\' ? \'minus\' : \'plus\' }}"></i>\r\n			Point Features (WMS)\r\n		</div>\r\n	</div>\r\n\r\n	<div class="rocks-accordion-content" ng-show="controlPanelVM.targetPanel == \'pointFeatures\'">\r\n		<rocks-wms-points-legend></rocks-wms-points-legend>\r\n	</div>\r\n\r\n\r\n	<div class="rocks-accordion">\r\n		<div class="rocks-toggle-button" title="Show/hide point features WMS layer">\r\n			<input\r\n				type="checkbox"\r\n				ng-model="controlPanelVM.wmsInspectorService.inspectorEnabled"\r\n				ng-change="controlPanelVM.wmsInspectorService.togglePointInspector()" />\r\n		</div>\r\n		<div class="title" ng-click="controlPanelVM.setTargetPanel(\'wmsInspector\')">\r\n			<i class="fa fa-{{ controlPanelVM.targetPanel == \'wmsInspector\' ? \'minus\' : \'plus\' }}"></i>\r\n			WMS Inspector (GetFeatureInfo)\r\n		</div>\r\n	</div>\r\n	<div class="rocks-accordion-content" ng-show="controlPanelVM.targetPanel == \'wmsInspector\'">\r\n		<wms-inspector-panel></wms-inspector-panel>\r\n	</div>\r\n\r\n\r\n	<div class="rocks-accordion">\r\n		<div class="title w100" ng-click="controlPanelVM.setTargetPanel(\'clipShip\')">\r\n			<i class="fa fa-{{ controlPanelVM.targetPanel == \'clipShip\' ? \'minus\' : \'plus\' }}"></i>\r\n			Download Rock Property Data\r\n		</div>\r\n	</div>\r\n\r\n	<div class="rocks-accordion-content" ng-show="controlPanelVM.targetPanel == \'clipShip\'">\r\n\r\n		<rocks-clip-ship></rocks-clip-ship>\r\n\r\n	</div>\r\n\r\n</div>'),
e.put("rockprops/wms-inspector-panel.html",'\r\n<div ng-show="wmsInspectorVM.wmsInspectorState.view == \'INTRO\'">\r\n	<div ng-if="wmsInspectorVM.wmsInspectorService.inspectorEnabled">Click the map to get feature info.</div>\r\n	<div ng-if="!wmsInspectorVM.wmsInspectorService.inspectorEnabled">Enable WMS Inspector to interrogate WMS layers.</div>\r\n</div>\r\n\r\n<div ng-show="wmsInspectorVM.wmsInspectorState.view == \'LAYERSELECT\'">\r\n\r\n	<p style="margin: 10px 0px;" tooltip="Approx 30m accuracy">\r\n		Select a layer to query:\r\n		<code>\r\n			{{wmsInspectorVM.wmsInspectorState.targetGeom.degrees.lat | number : 2}},\r\n			{{wmsInspectorVM.wmsInspectorState.targetGeom.degrees.lon | number : 2}}\r\n		</code>\r\n	</p>\r\n\r\n	<a\r\n		class="btn btn-default"\r\n		style="width: 100%; margin: 2px 0px"\r\n		ng-click="wmsInspectorVM.wmsInspectorService.queryRocks()"\r\n		href="javascript:;">\r\n		Rock Properties Data\r\n	</a>\r\n\r\n	<a\r\n		ng-repeat="feature in wmsInspectorVM.wmsInspectorService.features"\r\n		class="btn btn-default"\r\n	   	style="width: 100%; margin: 2px 0px"\r\n	   	ng-click="wmsInspectorVM.wmsInspectorService.queryFeature(feature)"\r\n	   	href="javascript:;">\r\n		{{feature.name}}\r\n	</a>\r\n\r\n	<a class="btn btn-default"\r\n	   style="width: 100%; margin-top: 20px"\r\n	   ng-click="wmsInspectorVM.wmsInspectorState.view = \'INTRO\'"\r\n	   href="javascript:;">\r\n		<i class="fa fa-times fa-lg"></i>\r\n		Cancel\r\n	</a>\r\n\r\n</div>\r\n\r\n\r\n<div ng-show="wmsInspectorVM.wmsInspectorState.view == \'FEATUREINFO\'">\r\n\r\n	<div ng-show="wmsInspectorVM.wmsInspectorService.isLoading">\r\n		<div id="rocks-inspector-loading"></div>\r\n	</div>\r\n\r\n	<div ng-hide="wmsInspectorVM.wmsInspectorService.isLoading">\r\n\r\n		<p style="margin: 10px 0px;" tooltip="Approx 30m accuracy">\r\n			Feature Info for:\r\n			<code>\r\n				{{wmsInspectorVM.wmsInspectorState.targetGeom.degrees.lat | number : 2}},\r\n				{{wmsInspectorVM.wmsInspectorState.targetGeom.degrees.lon | number : 2}}\r\n			</code>\r\n		</p>\r\n\r\n		<!-- put html here.. -->\r\n		<div ng-bind-html="wmsInspectorVM.wmsInspectorService.featureInfo"></div>\r\n\r\n	</div>\r\n\r\n	<div>\r\n\r\n		<a class="btn btn-default"\r\n		   style="width: 49%; margin-top: 20px"\r\n		   ng-click="wmsInspectorVM.wmsInspectorState.view = \'LAYERSELECT\'"\r\n		   href="javascript:;">\r\n			<i class="fa fa-arrow-left fa-lg"></i>\r\n			Back\r\n		</a>\r\n\r\n		<a class="btn btn-default"\r\n		   style="width: 49%; margin-top: 20px"\r\n		   ng-click="wmsInspectorVM.wmsInspectorState.view = \'INTRO\'"\r\n		   href="javascript:;">\r\n			<i class="fa fa-times fa-lg"></i>\r\n			Cancel\r\n		</a>\r\n\r\n	</div>\r\n\r\n</div>'),e.put("rockprops/wms-points-panel.html",'<div ng-hide="rocksWmsPointsVM.rocksPanelService.pointsEnabled">\r\n	Enable Point Features to view layers.\r\n</div>\r\n\r\n<div ng-show="rocksWmsPointsVM.rocksPanelService.pointsEnabled">\r\n\r\n	<div style="padding: 5px 10px; margin-left: -10px; background: #f0f0f0; border-radius: 3px;">\r\n		<label>\r\n			<input\r\n				type="checkbox"\r\n				ng-model="rocksWmsPointsVM.wmsPointsService.masterChecked"\r\n				ng-change="rocksWmsPointsVM.wmsPointsService.toggleChecked()"\r\n				ng-disabled="!rocksWmsPointsVM.rocksPanelService.pointsEnabled"/>\r\n			{{ rocksWmsPointsVM.wmsPointsService.masterChecked ? \'Deselect\' : \'Select\' }} all layers\r\n		</label>\r\n	</div>\r\n\r\n	<div ng-repeat="legend in rocksWmsPointsVM.wmsPointsService.legendData" class=\'rocks-points-legend-item\'>\r\n\r\n		<label>\r\n			<input\r\n			type="checkbox"\r\n			ng-model="legend.isSelected" />\r\n			<img ng-src="{{legend.legendUrl}}" alt="{{legend}} legend icon" />\r\n		</label>\r\n\r\n	</div>\r\n\r\n	<a class="btn btn-default"\r\n	   style="width: 100%; margin-top: 20px"\r\n	   ng-click="rocksWmsPointsVM.wmsPointsService.updatePointsLayer()"\r\n	   href="javascript:;">\r\n		<i class="fa fa-refresh fa-lg"></i>\r\n		Update layers\r\n	</a>\r\n\r\n</div>')}]);
//# sourceMappingURL=explorer-rock-properties-components.min.js.map
