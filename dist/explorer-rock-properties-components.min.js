var rpComponents;!function(e){var t;!function(t){"use strict";var r=function(){function e(e,t,r){this.$scope=e,this.clusterChartService=t,this.clusterService=r}return e.$inject=["$scope","clusterChartService","clusterService"],e}();t.ClusterChartCtrl=r;var n=function(){function e(e,t){this.$http=e,this.$rootScope=t}return e.prototype.hideChart=function(){this.$rootScope.$broadcast("chart.update",{targetChartId:!1})},e.prototype.buildChart=function(e){document.getElementById("cluster-summary-chart-d3").innerHTML="",this.$rootScope.$broadcast("chart.update",{targetChartId:"clusterSummaryChart"});var t,r,n,i,o=1250,s=255,c=e.length<7?e.length:4;.35*document.body.clientHeight>s&&document.body.clientWidth>o?(n={top:0,right:10,bottom:0,left:10},t=document.body.clientWidth/c-(2*n.left+n.right),r=.35*document.body.clientHeight,i=20):(n={top:0,right:5,bottom:0,left:5},t=o/c-(2*n.left+n.right),r=s,i=15);var a=document.body.clientWidth-(2*n.left+n.right),l=Math.min(t,r)/2;e.forEach(function(e){function o(n,i,o,a){var h=u.selectAll("g.legendg").data(n).enter().append("g").attr("class","legendg").attr("transform",function(e,n){return"translate("+-(t/2.3)+","+(n*(y+k)-r/4)+")"}),d=h.append("rect").attr("x",45).attr("width",y).attr("height",y).attr("class","legend").style("fill",function(e,t){return p(e.attributeName)}),g=h.append("text").attr("x",65).attr("y",6).attr("dy",".35em").style("text-anchor","start").text(function(e){var t=(l-20)/5;return e.attributeName.length>t?e.attributeName.substring(0,t)+"...":e.attributeName});if(d.append("svg:title").text(function(t){var r=d3.sum(e.data.map(function(e){return e.count}));return t.attributeName+" ("+Math.round(1e3*t.count/r)/10+"%)"}),g.append("svg:title").text(function(t){var r=d3.sum(e.data.map(function(e){return e.count}));return t.attributeName+" ("+Math.round(1e3*t.count/r)/10+"%)"}),a>1){var v=u.append("g").attr("class","pageNo").attr("transform","translate(-10,"+((i+1)*(y+k)-r/4)+")");v.append("text").text(o+"/"+a).attr("dx",".25em");var m=u.append("g").attr("class","prev").attr("transform","translate(-20,"+((i+1.5)*(y+k)-r/4)+")").on("click",s).style("cursor","pointer"),f=u.append("g").attr("class","next").attr("transform","translate(0,"+((i+1.5)*(y+k)-r/4)+")").on("click",c).style("cursor","pointer");f.append("polygon").style("stroke","#000").style("fill","#000").attr("points","0,0, 20,0, 10,10"),m.append("polygon").style("stroke","#000").style("fill","#000").attr("points","0,10, 20,10, 10,0"),o==a?(f.style("opacity","0.3"),f.on("click","").style("cursor","")):1==o&&(m.style("opacity","0.3"),m.on("click","").style("cursor",""))}}function s(){S--,u.selectAll("g.legendg").remove(),u.select(".pageNo").remove(),u.select(".prev").remove(),u.select(".next").remove();for(var t=(S-1)*m,r=t+m,n=[],i=0;i<e.data.length;i++)i>=t&&r>i&&n.push(e.data[i]);o(n,m,S,f)}function c(){S++,u.selectAll("g.legendg").remove(),u.select(".pageNo").remove(),u.select(".prev").remove(),u.select(".next").remove();for(var t=(S-1)*m,r=t+m,n=[],i=0;i<e.data.length;i++)i>=t&&r>i&&n.push(e.data[i]);o(n,m,S,f)}var p=d3.scale.category20(),u=d3.select("#cluster-summary-chart-d3").append("svg").attr("width",t).attr("height",r).style("margin-left",n.left+"px").style("margin-right",n.right+"px").append("g").attr("transform","translate("+t/2+","+(r/2+10)+")"),h=d3.svg.arc().innerRadius(l-i).outerRadius(l),d=d3.layout.pie().value(function(e){return e.count}).sort(null),g=d3.select("#cluster-summary-chart-d3").append("div").attr("class","cluster-summary-tooltip");g.append("div").attr("class","attribute"),g.append("div").attr("class","count"),g.append("div").attr("class","percent");var v=u.selectAll("path").data(d(e.data)).enter().append("path").attr("d",h).attr("fill",function(e,t){return p(e.data.attributeName)}).each(function(e){this._current=e});v.on("mouseover",function(t){var r=d3.sum(e.data.map(function(e){return e.count})),n=Math.round(1e3*t.data.count/r)/10;g.select(".attribute").html(t.data.attributeName),g.select(".count").html("Count: "+t.data.count),g.select(".percent").html("Percent: "+n+"%"),g.style("display","block")}),v.on("mouseout",function(){g.style("display","none")}),v.on("mousemove",function(e){var t=d3.event.pageX>a-180?d3.event.pageX-180:d3.event.pageX,r=d3.event.pageY>document.body.clientHeight-120?d3.event.pageY-100:d3.event.pageY+10;g.style("top",r+"px").style("left",t+"px")}),u.append("g").attr("class","cluster-summary-chart-title").append("text").attr("x",0).attr("y",-(r/2+7)).attr("dy",".71em").style("text-anchor","middle").style("fill","#000").style("font-weight","bold").text(e.propertyName);var m,f,S,C=e.data.length,y=15,k=6,w=(y+k)*C;if(w/l>1){m=Math.floor(l/(y+k)),f=Math.ceil(C/m),S=1;for(var x=(S-1)*m,b=x+m,P=[],I=0;I<e.data.length;I++)I>=x&&b>I&&P.push(e.data[I]);o(P,m,S,f)}else o(e.data,Math.floor(l/(y+k)),1,1)}),document.getElementById("cluster-summary-chart-d3").style.display="none",setTimeout(function(){document.getElementById("cluster-summary-chart-loading").style.display="none",document.getElementById("cluster-summary-chart-d3").style.display="block"},1500)},e.$inject=["$http","$rootScope"],e}();t.ClusterChartService=n,angular.module("explorer.rockproperties.charts",[]).factory("clusterChartService",["$http","$rootScope",function(t,r){return new e.chartService.ClusterChartService(t,r)}]).controller("clusterChartCtrl",r).directive("clusterChartSummary",function(){return{templateUrl:"rockprops/cluster-summary.html",controller:r,controllerAs:"clusterChartVM"}})}(t=e.chartService||(e.chartService={}))}(rpComponents||(rpComponents={}));var rpComponents;!function(e){var t;!function(t){"use strict";var r=function(){function e(e,t,r,n,i,o){this.$scope=e,this.$timeout=t,this.rocksClipShipService=r,this.rocksPanelService=n,this.rocksFiltersService=i,this.rocksQueryBuilderExport=o}return e.prototype.startClipShip=function(){var e=this;this.$timeout(function(){e.rocksClipShipService.step="download",e.rocksQueryBuilderExport.startClipShip(e.rocksFiltersService.exportProperties.filterOptions,e.rocksClipShipService.targetFormat,e.rocksClipShipService.targetExtent)})},e.$inject=["$scope","$timeout","rocksClipShipService","rocksPanelService","rocksFiltersService","rocksQueryBuilderExport"],e}();t.RocksClipShipCtrl=r;var n=function(){function e(e,t,r){var n=this;this.$rootScope=e,this.rocksFiltersService=t,this.rocksConfigService=r,this.step="startDraw",this.$inject=["$rootScope","rocksFiltersService","rocksConfigService"],this.$rootScope.$on("rocks.config.ready",function(){n.exportFormats=n.rocksConfigService.config.geoserverWfsExportFormats}),this.$rootScope.$on("rocks.extent.ready",function(e,t){n.step="selectFeatures",n.targetExtent=t})}return e.prototype.startDraw=function(){this.$rootScope.$broadcast("draw.extent.start","rocks.extent.ready")},e.prototype.openGeoserver=function(){var e=window.open(this.rocksConfigService.config.geoserverDashboardUrl,"_blank");e&&e.focus()},e.prototype.updateExportFormat=function(e){this.targetFormat=e},e}();t.RocksClipShipService=n,angular.module("explorer.rockproperties.clipship",[]).factory("rocksClipShipService",["$rootScope","rocksFiltersService","rocksConfigService",function(t,r,n){return new e.clipShipService.RocksClipShipService(t,r,n)}]).controller("rocksClipShipCtrl",r).directive("rocksClipShip",function(){return{templateUrl:"rockprops/clip-ship.html",controller:r,controllerAs:"rocksClipShipVM"}}).filter("noClipSelected",[function(e){return function(e){if(e){for(var t=0;t<e.length;t++)if(e[t].isSelected)return!1;return!0}}}])}(t=e.clipShipService||(e.clipShipService={}))}(rpComponents||(rpComponents={}));var rpComponents;!function(e){var t;!function(t){"use strict";var r=function(){function e(e,t,r,n){this.$scope=e,this.clusterService=t,this.rocksPanelService=r,this.rocksFiltersService=n}return e.$inject=["$scope","clusterService","rocksPanelService","rocksFiltersService"],e}();t.RocksClusterFilterCtrl=r;var n=function(){function e(e,t,r,n,i,o){var s=this;this.$http=e,this.$rootScope=t,this.zoomLevelService=r,this.clusterChartService=n,this.loadingSpinnerService=i,this.rocksConfigService=o,this.clusterRangeMeta={maxExtrudeHeight:5e5},this.reCluster=function(){var e=[],t=new Cesium.LabelCollection;s.getClusters().then(function(r){if(r.data){var n=r.data;s.clusterRangeMeta.maxCount=d3.max(n,function(e){return e.count}),s.clusterRangeMeta.scale=d3.scale.linear().domain([0,s.clusterRangeMeta.maxCount]).range([0,s.clusterRangeMeta.maxExtrudeHeight]);for(var i=0;i<n.length;i++){n[i].featureType="rockPropsCluster";var o=s.computeClusterAttributes(n[i].count);e.push(s.buildClusterInstance(n[i],o)),t.add(s.buildLabel(n[i],o))}s.drawClusters(e,t)}else console.log("got no clusters"),console.log(r)})}}return e.prototype.init=function(e){var t=this;this.viewer=e,this.zoomLevelService.viewer=e,this.serviceUrl=this.rocksConfigService.config.clusterServiceUrl,this.$rootScope.$on("rocks.clusters.update",function(){t.reCluster()}),this.rocksConfigService.config.useClusterPicking&&(this.pickHandler=new Cesium.ScreenSpaceEventHandler(this.viewer.scene.canvas),this.pickHandlerAction=function(e){var r=t.viewer.scene.pick(e.position);Cesium.defined(r)&&Cesium.defined(r.id)&&r.id.hasOwnProperty("featureType")&&"rockPropsCluster"==r.id.featureType&&(t.clearHighlighted(),t.targetId=r.id,t.queryCluster(t.targetId),t.setHighlighted(t.targetId,!0))})},e.prototype.setHighlighted=function(e,t){var r=this.clusterPrimitive.getGeometryInstanceAttributes(e);r&&t&&(r.prevColor=r.color,r.color=Cesium.ColorGeometryInstanceAttribute.toValue(Cesium.Color.fromCssColorString("#ff00ff").withAlpha(1)))},e.prototype.clearHighlighted=function(){if(this.targetId){var e=this.clusterPrimitive.getGeometryInstanceAttributes(this.targetId);e&&e.hasOwnProperty("prevColor")&&(e.color=e.prevColor)}},e.prototype.toggleClusters=function(){return this.clustersCollection?(this.clustersCollection.show=!this.clustersCollection.show,this.zoomLevelService.setActive(this.clustersCollection.show),this.clustersCollection.show?this.pickHandler.setInputAction(this.pickHandlerAction,Cesium.ScreenSpaceEventType.LEFT_CLICK):this.pickHandler.removeInputAction(Cesium.ScreenSpaceEventType.LEFT_CLICK),this.reCluster()):(this.clustersCollection=new Cesium.PrimitiveCollection,this.viewer.scene.primitives.add(this.clustersCollection),this.zoomLevelService.setActive(!0),this.reCluster(),this.pickHandler.setInputAction(this.pickHandlerAction,Cesium.ScreenSpaceEventType.LEFT_CLICK)),this.clustersCollection.show},e.prototype.getClusters=function(){return this.$http({method:"GET",url:this.serviceUrl+"/"+this.zoomLevelService.nextIndex+".json",headers:{"Content-Type":"application/json"},data:{heightIndex:this.zoomLevelService.nextIndex,extent:this.zoomLevelService.getViewExtent(100)}})},e.prototype.queryCluster=function(e){var t=this;this.summarySpinner?document.getElementById("cluster-summary-chart-loading").style.display="block":(this.summarySpinner=this.loadingSpinnerService.addSpinner({width:100,height:100,container:"#cluster-summary-chart-loading",id:"chart-spinner"}),this.summarySpinner()),this.$http({method:"GET",url:this.serviceUrl+"/cluster.json",headers:{"Content-Type":"application/json"},data:{targetCluster:e}}).then(function(e){e.hasOwnProperty("data")&&t.clusterChartService.buildChart(e.data)})},e.prototype.drawClusters=function(e,t){this.clustersCollection.removeAll(),this.clusterPrimitive=new Cesium.Primitive({geometryInstances:e,appearance:new Cesium.PerInstanceColorAppearance({translucent:!0,closed:!0})}),this.clustersCollection.add(this.clusterPrimitive),this.clustersCollection.add(t)},e.prototype.buildClusterInstance=function(e,t){return new Cesium.GeometryInstance({geometry:new Cesium.CircleGeometry({center:Cesium.Cartesian3.fromDegrees(e.lon,e.lat),radius:t.radius,vertexFormat:Cesium.PerInstanceColorAppearance.VERTEX_FORMAT,extrudedHeight:t.extrudeHeight}),id:e,attributes:{color:Cesium.ColorGeometryInstanceAttribute.fromColor(t.color)}})},e.prototype.buildLabel=function(e,t){return{position:Cesium.Cartesian3.fromDegrees(e.lon,e.lat,100+t.extrudeHeight),text:e.count.toString(),fillColor:Cesium.Color.BLACK,outlineColor:Cesium.Color.RED,font:40-this.zoomLevelService.nextIndex+"px arial, sans-serif",horizontalOrigin:Cesium.HorizontalOrigin.CENTER,id:e}},e.prototype.computeClusterAttributes=function(e){var t={radius:1e5*(this.zoomLevelService.nextIndex/10),extrudeHeight:this.clusterRangeMeta.scale(e)*(this.zoomLevelService.nextIndex/10)};return 100>e?t.color=Cesium.Color.fromCssColorString("#4781cd").withAlpha(.5):e>=10&&1e3>e?t.color=Cesium.Color.fromCssColorString("#0fc70e").withAlpha(.5):t.color=Cesium.Color.fromCssColorString("#ff0000").withAlpha(.5),t},e.$inject=["$http","$rootScope","zoomLevelService","clusterChartService","loadingSpinnerService","rocksConfigService"],e}();t.ClusterService=n,angular.module("explorer.rockproperties.clusters",[]).controller("rocksClusterFilterCtrl",r).directive("rocksClusterFilters",function(){return{templateUrl:"rockprops/cluster-filters.html",controller:r,controllerAs:"rocksClusterFilterVM"}}).factory("clusterService",["$http","$rootScope","zoomLevelService","clusterChartService","loadingSpinnerService","rocksConfigService",function(t,r,n,i,o,s){return new e.clusterService.ClusterService(t,r,n,i,o,s)}])}(t=e.clusterService||(e.clusterService={}))}(rpComponents||(rpComponents={}));var rpComponents;!function(e){var t;!function(t){"use strict";var r=function(){function e(e){this.$rootScope=e}return e.prototype.setConfig=function(e){this.config=e,this.$rootScope.$broadcast("rocks.config.ready")},e.$inject=["$rootScope"],e}();t.RocksConfigService=r,angular.module("explorer.rockproperties.config",[]).factory("rocksConfigService",["$rootScope",function(t){return new e.config.RocksConfigService(t)}])}(t=e.config||(e.config={}))}(rpComponents||(rpComponents={}));var rpComponents;!function(e){var t;!function(t){"use strict";var r=function(){function e(e,t){this.$scope=e,this.rocksPanelService=t,this.targetPanel=""}return e.prototype.setTargetPanel=function(e){this.targetPanel=this.targetPanel!=e?e:""},e.$inject=["$scope","rocksPanelService"],e}();t.RocksPanelCtrl=r;var n=function(){function e(e,t,r,n){this.$rootScope=e,this.clusterService=t,this.wmsPointsService=r,this.rocksConfigService=n,this.clustersEnabled=!1,this.pointsEnabled=!1}return e.prototype.init=function(e,t){this.viewer=e,this.rocksConfigService.setConfig(t),this.clusterService.init(e),this.wmsPointsService.init(e)},e.prototype.toggleClusters=function(){this.clustersEnabled=this.clusterService.toggleClusters()},e.prototype.togglePoints=function(){this.pointsEnabled=this.wmsPointsService.togglePoints()},e.$inject=["$rootScope","clusterService","wmsPointsService","rocksConfigService"],e}();t.RocksPanelService=n,angular.module("explorer.rockproperties.controlpanel",[]).factory("rocksPanelService",["$rootScope","clusterService","wmsPointsService","rocksConfigService",function(t,r,n,i){return new e.controlPanel.RocksPanelService(t,r,n,i)}]).controller("rocksPanelCtrl",r).directive("rocksControlPanel",function(){return{templateUrl:"rockprops/control-panel.html",controller:r,controllerAs:"controlPanelVM"}})}(t=e.controlPanel||(e.controlPanel={}))}(rpComponents||(rpComponents={}));var rpComponents;!function(e){var t;!function(t){"use strict";var r=function(){function e(e,t,r){var n=this;this.$http=e,this.$rootScope=t,this.rocksConfigService=r,this.$inject=["$http","$rootScope","rocksConfigService"],this.$rootScope.$on("rocks.config.ready",function(){e.get(n.rocksConfigService.config.filterNamesServiceUrl).then(function(e){n.filters=e.data;for(var t=0;t<n.filters.length;t++)if("PROPERTY"==n.filters[t].filterType){for(var r=angular.copy(n.filters[t].filterOptions),i=0;i<r.length;i++)r[i]={name:r[i],isSelected:!1};var o=angular.copy(n.filters[t]);o.filterOptions=r,n.exportProperties=o}}),function(e){console.log("Failed to get rock props filters"),console.log(e)}})}return e.prototype.setAllExportSelected=function(e){for(var t=0;t<this.exportProperties.filterOptions.length;t++)this.exportProperties.filterOptions[t].isSelected=e},e}();t.RocksFiltersService=r,angular.module("explorer.rockproperties.filters",[]).factory("rocksFiltersService",["$http","$rootScope","rocksConfigService",function(t,r,n){return new e.filters.RocksFiltersService(t,r,n)}])}(t=e.filters||(e.filters={}))}(rpComponents||(rpComponents={}));var rpComponents;!function(e){var t;!function(t){"use strict";var r=function(){function e(e,t,r){this.$q=e,this.$http=t,this.rocksConfigService=r}return e.prototype.getWfsFeatureTypeNames=function(){var e=this,t=this.$q.defer();return this.$http.get(this.rocksConfigService.config.geoserverWfsUrl+"?request=GetCapabilities&service=wfs&version="+this.rocksConfigService.config.geoserverWfsVersion).success(function(r,n,i,o){var s=e.getFeatureTypeNamesFromWfsCapsJson(e.xmlToJson($.parseXML(r)));t.resolve(s)}).error(function(e){console.log("GetCapabilities request failed"),console.log(e),t.error()}),t.promise},e.prototype.getFeatureTypeNamesFromWfsCapsJson=function(e){for(var t=e["wfs:WFS_Capabilities"].FeatureTypeList.FeatureType,r=[],n=0;n<t.length;n++)r.push(t[n].Name["#text"]);return r},e.prototype.getWmsLayerNames=function(){var e=this,t=this.$q.defer();return this.$http.get(this.rocksConfigService.config.geoserverWmsUrl+"?request=GetCapabilities&service=wms&version="+this.rocksConfigService.config.geoserverWmsVersion).success(function(r,n,i,o){e.wmsLayerNames=e.getLayerNamesFromWmsCapsJson(e.xmlToJson($.parseXML(r))),t.resolve(e.wmsLayerNames)}).error(function(e){console.log("GetCapabilities request failed"),console.log(e),t.error()}),t.promise},e.prototype.getLayerNamesFromWmsCapsJson=function(e){for(var t=e.WMS_Capabilities.Capability.Layer.Layer,r=[],n=0;n<t.length;n++)r.push(t[n].Name["#text"]);return r},e.prototype.xmlToJson=function(e){var t={};if(1==e.nodeType){if(e.attributes.length>0){t["@attributes"]={};for(var r=0;r<e.attributes.length;r++){var n=e.attributes.item(r);t["@attributes"][n.nodeName]=n.nodeValue}}}else 3==e.nodeType&&(t=e.nodeValue);if(e.hasChildNodes())for(var i=0;i<e.childNodes.length;i++){var o=e.childNodes.item(i),s=o.nodeName;if("undefined"==typeof t[s])t[s]=this.xmlToJson(o);else{if("undefined"==typeof t[s].push){var c=t[s];t[s]=[],t[s].push(c)}t[s].push(this.xmlToJson(o))}}return t},e.$inject=["$q","$http","rocksConfigService"],e}();t.GwsUtilService=r,angular.module("explorer.rockproperties.gwsutil",[]).factory("gwsUtilService",["$q","$http","rocksConfigService",function(t,r,n){return new e.gwsUtilService.GwsUtilService(t,r,n)}])}(t=e.gwsUtilService||(e.gwsUtilService={}))}(rpComponents||(rpComponents={}));var rpComponents;!function(e){var t;!function(t){"use strict";var r=function(){function e(e,t,r,n,i,o,s){var c=this;this.$q=e,this.$http=t,this.$rootScope=r,this.loadingSpinnerService=n,this.rocksClipShipService=i,this.rocksConfigService=o,this.gwsUtilService=s,this.propertyQuery="",this.$inject=["$q","$http","$rootScope","loadingSpinnerService","rocksClipShipService","rocksConfigService","gwsUtilService"],this.$rootScope.$on("rocks.config.ready",function(){c.baseUrl=c.rocksConfigService.config.geoserverWfsUrl+"?",angular.forEach(c.rocksConfigService.config.geoserverWfsExportParams,function(e,t){c.baseUrl+=t+"="+e+"&"}),c.baseUrl=c.baseUrl.slice(0,-1),c.gwsUtilService.getWfsFeatureTypeNames().then(function(e){c.wfsLayerNames=e})})}return e.prototype.startClipShip=function(e,t,r){var n=this;this.loading=!0,this.loadingSpinner||(this.loadingSpinner=this.loadingSpinnerService.addSpinner({width:80,height:80,container:"#rock-clip-ship-loading",id:"clip-ship-spinner"}),this.loadingSpinner());for(var i=[],o=0;o<e.length;o++)e[o].isSelected&&i.push(e[o].name);if("csv"===t){var s=new JSZip;if(JSZip.support.blob){var c=[];console.log("this.wfsLayerNames"),console.log(this.wfsLayerNames);for(var o=0;o<this.wfsLayerNames.length;o++){var a=this.buildQuery(i,r,t,[this.wfsLayerNames[o]]),l=this.$http.get(a);c.push(l)}this.$q.all(c).then(function(e){for(var t=0;t<e.length;t++){var r=(e[t].data.match(/\n/g)||[]).length;if(r>1){var i=n.wfsLayerNames[t].split(" ").join("-");s.file(i+".csv",e[t].data+"\n")}}var o=s.generate({type:"blob"});saveAs(o,"rocks-export.zip"),n.loading=!1,n.rocksClipShipService.step="startDraw"})}else{for(var o=0;o<this.wfsLayerNames.length;o++)window.open(this.buildQuery(i,r,t,[this.wfsLayerNames[o]]));this.loading=!1}}else this.exportUrl=this.buildQuery(i,r,t,this.wfsLayerNames),this.loading=!1},e.prototype.buildQuery=function(e,t,r,n){function i(e){for(var t in e)if(e.hasOwnProperty(t))return!1;return!0}var o,s=this.getTypeNamesQuery(n),c="&CQL_FILTER=BBOX(GEOM,"+t.west+","+t.south+","+t.east+","+t.north+")",a="",l={},p="&outputFormat="+r,u=!i(l),h=l.hasOwnProperty("PROPERTY"),d=h&&1===Object.keys(l).length?!0:!1;return u&&h?(this.propertyQuery="%20AND%20PROPERTY='"+l.PROPERTY+"'",d||(a=this.getFilters(l))):u?(this.propertyQuery=this.getPropertyQuery(e),d||(a=this.getFilters(l))):this.propertyQuery=this.getPropertyQuery(e),o=this.baseUrl+s+p+c+a+this.propertyQuery},e.prototype.getFilters=function(e){var t="%20AND%20";for(var r in e)"PROPERTY"!==r&&(t=t.concat(r+"='"+e[r]+"'%20AND%20"));return t=t.substring(0,t.length-9)},e.prototype.getPropertyQuery=function(e){for(var t="%20AND%20(",r=0;r<e.length;r++)t=t.concat("PROPERTY='"+e[r]+"'%20OR%20");return t=t.substring(0,t.length-8),t=t.concat(")")},e.prototype.getTypeNamesQuery=function(e){for(var t="&typeName=",r=0;r<e.length;r++)t=t.concat(e[r]+",");return t=t.substring(0,t.length-1)},e}();t.QueryBuilder=r,angular.module("explorer.rockproperties.queryexport",[]).factory("rocksQueryBuilderExport",["$q","$http","$rootScope","loadingSpinnerService","rocksClipShipService","rocksConfigService","gwsUtilService",function(t,r,n,i,o,s,c){return new e.queryBuilderExport.QueryBuilder(t,r,n,i,o,s,c)}])}(t=e.queryBuilderExport||(e.queryBuilderExport={}))}(rpComponents||(rpComponents={}));var rpComponents;!function(e){var t;!function(t){"use strict";var r=function(){function e(){}return e.prototype.addSpinner=function(e){return function(){function t(e,r){e.transition().ease("linear").duration(r).attrTween("transform",function(){return d3.interpolateString("rotate(0)","rotate(360)")}),setTimeout(function(){t(e,r)},r)}var r=Math.min(e.width,e.height)/2,n=2*Math.PI,i=d3.svg.arc().innerRadius(.5*r).outerRadius(.9*r).startAngle(0),o=d3.select(e.container).append("svg").attr("id",e.id).attr("width",e.width).attr("height",e.height).append("g").attr("transform","translate("+e.width/2+","+e.height/2+")");o.append("path").datum({endAngle:.33*n}).style("fill","#4D4D4D").attr("d",i).call(t,1500)}},e}();t.LoadingSpinnerService=r,angular.module("explorer.rockproperties.spinner",[]).factory("loadingSpinnerService",[function(){return new e.spinnerService.LoadingSpinnerService}])}(t=e.spinnerService||(e.spinnerService={}))}(rpComponents||(rpComponents={}));var rpComponents;!function(e){var t;!function(t){"use strict";var r=function(){function e(){this.view="LEGEND"}return e}();t.WmsInspectorState=r,angular.module("explorer.rockproperties.inspectorstate",[]).factory("wmsInspectorState",[function(){return new e.wmsInspectorState.WmsInspectorState}])}(t=e.wmsInspectorState||(e.wmsInspectorState={}))}(rpComponents||(rpComponents={}));var rpComponents;!function(e){var t;!function(t){"use strict";var r=function(){function e(e,t,r){this.$scope=e,this.wmsInspectorState=t,this.wmsInspectorService=r}return e.$inject=["$scope","wmsInspectorState","wmsInspectorService"],e}();t.WmsInspectorCtrl=r;var n=function(){function e(e,t,r,n,i,o,s){var c=this;this.$rootScope=e,this.$http=t,this.wmsInspectorState=r,this.assetsService=n,this.configService=i,this.loadingSpinnerService=o,this.gwsUtilService=s,this.isLoading=!1,this.URL_EXCLUDE="?SERVICE=WMS&",this.SURFACE_GEO="GA_Surface_Geology_of_Australia",this.$inject=["$rootScope","$http","wmsInspectorState","assetsService","configService","loadingSpinnerService","gwsUtilService"],n.getReferenceFeatureClasses().then(function(e){console.log(e),c.features=e}),i.getConfig().then(function(e){c.rocksConfig=e.rockProps,c.rocksFeature={wmsUrl:c.rocksConfig.geoserverWmsUrl}})}return e.prototype.queryRocks=function(){if(!this.rocksFeature.hasOwnProperty("layers")&&this.gwsUtilService.wmsLayerNames){this.rocksFeature.layers=[];for(var e=0;e<this.gwsUtilService.wmsLayerNames.length;e++)this.rocksFeature.layers.push(this.rocksConfig.geoserverWmsLayerPrefix+this.gwsUtilService.wmsLayerNames[e])}this.queryFeature(this.rocksFeature)},e.prototype.queryFeature=function(e){var t=this;console.log("queryFeature"),console.log(e),this.wmsInspectorState.view="FEATUREINFO",this.toggleLoading();var r=e.wmsUrl,n=e.layers;r.indexOf(this.URL_EXCLUDE)>-1&&(r=r.substring(0,r.length-this.URL_EXCLUDE.length)),r.indexOf(this.SURFACE_GEO)>-1&&(n=this.wmsInspectorState.cameraHeight<=34e4?[n[0]]:[n[1]]);var i="?SERVICE=WMS&REQUEST=GetFeatureInfo&VERSION=1.1.1&LAYERS="+n+"&STYLES=&SRS=EPSG%3A4326&FORMAT=image%2Fpng&BBOX="+this.wmsInspectorState.targetGeom.degrees.lon+","+this.wmsInspectorState.targetGeom.degrees.lat+","+(this.wmsInspectorState.targetGeom.degrees.lon+3e-4)+","+(this.wmsInspectorState.targetGeom.degrees.lat+3e-4)+"&QUERY_LAYERS="+n+"&INFO_FORMAT=text%2Fhtml&FEATURE_COUNT=50&WIDTH=2&HEIGHT=2&X=1&Y=1&TRANSPARENT=true&EXCEPTIONS=application%2Fvnd.ogc.se_xml";console.log("QUERY"),console.log(r+i),this.$http.get(r+i).success(function(e){t.featureInfo=e,t.toggleLoading()}).error(function(e,t,r,n){console.log("Couldn't load WMS GetFeatureInfo"),this.featureInfo="<h5>Couldn't load WMS GetFeatureInfo for this layer.</h5><p>You may not be able to access this function for some layers.</p>",this.toggleLoading()})},e.prototype.toggleLoading=function(){this.loadingSpinner?this.isLoading=!this.isLoading:(this.loadingSpinner=this.loadingSpinnerService.addSpinner({width:60,height:60,container:"#rocks-inspector-loading",id:"rocks-inspector-spinner"}),this.loadingSpinner(),this.isLoading=!0)},e}();t.WmsInspectorService=n,angular.module("explorer.rockproperties.inspector",["explorer.assets"]).factory("wmsInspectorService",["$rootScope","$http","wmsInspectorState","assetsService","configService","loadingSpinnerService","gwsUtilService",function(t,r,n,i,o,s,c){return new e.wmsInspectorService.WmsInspectorService(t,r,n,i,o,s,c)}]).controller("wmsInspectorCtrl",e.wmsInspectorService.WmsInspectorCtrl).directive("wmsInspectorPanel",function(){return{templateUrl:"rockprops/wms-inspector-panel.html",controller:r,controllerAs:"wmsInspectorVM"}})}(t=e.wmsInspectorService||(e.wmsInspectorService={}))}(rpComponents||(rpComponents={}));var rpComponents;!function(e){var t;!function(t){"use strict";var r=function(){function e(e,t,r,n){this.$scope=e,this.wmsPointsService=t,this.rocksPanelService=r,this.wmsInspectorState=n}return e.$inject=["$scope","wmsPointsService","rocksPanelService","wmsInspectorState"],e}();t.RocksWmsPointsCtrl=r;var n=function(){function e(e,t,r,n){this.$rootScope=e,this.gwsUtilService=t,this.rocksConfigService=r,this.wmsInspectorState=n,this.inspectorEnabled=!0,this.masterChecked=!0,this.legendParamString="",this.$inject=["$rootScope","gwsUtilService","rocksConfigService","wmsInspectorState"]}return e.prototype.init=function(e){var t=this;this.wmsServiceUrl=this.rocksConfigService.config.geoserverWmsUrl,this.viewer=e,this.restrictedBounds=Cesium.Rectangle.fromDegrees(109,-45,158,-8),this.legendParamString="?",angular.forEach(this.rocksConfigService.config.geoserverWmsLegendParams,function(e,r){t.legendParamString+=r+"="+e+"&"}),this.legendParamString=this.legendParamString.slice(0,-1)+"&LAYER=",this.gwsUtilService.getWmsLayerNames().then(function(e){t.layers=e,t.getLegendData()}),this.$rootScope.$on("viewer.click.left",function(e,r){if(r.degrees={lat:Cesium.Math.toDegrees(r.cartographic.latitude),lon:Cesium.Math.toDegrees(r.cartographic.longitude)},t.inspectorEnabled&&r.hasOwnProperty("cartographic")){t.wmsInspectorState.targetGeom=r,t.wmsInspectorState.view="LAYERSELECT",t.wmsInspectorState.cameraHeight=Cesium.Ellipsoid.WGS84.cartesianToCartographic(t.viewer.camera.position).height,console.log(t.viewer.imageryLayers);for(var n=0;n<t.viewer.imageryLayers.length;n++)console.log(t.viewer.imageryLayers.get(n).imageryProvider.layers)}})},e.prototype.togglePoints=function(){return this.pointsVisible=!this.pointsVisible,this.wmsLayer?this.wmsLayer.show=this.pointsVisible:this.updatePointsLayer(),this.pointsVisible},e.prototype.toggleChecked=function(){this.masterChecked!=this.masterChecked;for(var e in this.legendData)this.legendData[e].isSelected=this.masterChecked},e.prototype.togglePointInspector=function(){this.inspectorEnabled!=this.inspectorEnabled},e.prototype.getLegendData=function(){this.legendData={};for(var e=0;e<this.layers.length;e++)this.legendData[this.layers[e]]={legendUrl:this.wmsServiceUrl+this.legendParamString+this.layers[e],isSelected:!0}},e.prototype.updatePointsLayer=function(){var e=[];for(var t in this.legendData)this.legendData.hasOwnProperty(t)&&this.legendData[t].isSelected===!0&&e.push(t);this.wmsLayer&&this.viewer.imageryLayers.remove(this.wmsLayer),this.wmsLayer=this.viewer.imageryLayers.addImageryProvider(new Cesium.WebMapServiceImageryProvider({url:this.wmsServiceUrl,layers:e.toString(),rectangle:this.restrictedBounds,parameters:{transparent:"true",format:"image/png"},enablePickFeatures:!1})),this.wmsLayer.alpha=.7},e}();t.WmsPointsService=n,angular.module("explorer.rockproperties.wmspoints",[]).factory("wmsPointsService",["$rootScope","gwsUtilService","rocksConfigService","wmsInspectorState",function(t,r,n,i){return new e.pointsService.WmsPointsService(t,r,n,i)}]).controller("rocksWmsPointsCtrl",r).directive("rocksWmsPointsLegend",function(){return{templateUrl:"rockprops/wms-points-panel.html",controller:r,controllerAs:"rocksWmsPointsVM"}})}(t=e.pointsService||(e.pointsService={}))}(rpComponents||(rpComponents={}));var rpComponents;!function(e){var t;!function(t){"use strict";var r=function(){function e(e){var t=this;this.$rootScope=e,this.zoomLevels=[5e3,1e4,2e4,4e4,75e4,15e5,25e5,35e5,55e5,65e5,8e6],this.defaultExtent={west:109,south:-45,east:158,north:-8},this.moveEndHandler=function(){t.nextIndex=t.getIndex(Cesium.Ellipsoid.WGS84.cartesianToCartographic(t.viewer.camera.position).height),t.previousIndex>-1&&t.previousIndex!=t.nextIndex&&t.$rootScope.$broadcast("rocks.clusters.update",t.nextIndex),console.log("HEIGHT"),console.log(Cesium.Ellipsoid.WGS84.cartesianToCartographic(t.viewer.camera.position).height),t.previousIndex=t.nextIndex}}return e.prototype.getIndex=function(e){for(var t=0;t<this.zoomLevels.length;t++)if(e<this.zoomLevels[t])return t;return this.zoomLevels.length-1},e.prototype.setActive=function(e){e?(this.previousIndex=this.getIndex(Cesium.Ellipsoid.WGS84.cartesianToCartographic(this.viewer.camera.position).height),this.nextIndex=this.previousIndex,this.viewer.camera.moveEnd.addEventListener(this.moveEndHandler)):this.viewer.camera.moveEnd.removeEventListener(this.moveEndHandler)},e.prototype.getViewExtent=function(e){var t=Cesium.Ellipsoid.WGS84,r=window.devicePixelRatio||1,n=new Cesium.Cartesian2(-e,-e),i=this.viewer.scene.camera.pickEllipsoid(n,t);n=new Cesium.Cartesian2(this.viewer.scene.canvas.width/r+e,this.viewer.scene.canvas.height/r+e);var o=this.viewer.scene.camera.pickEllipsoid(n,t);return null!=i&&null!=o?(i=t.cartesianToCartographic(i),o=t.cartesianToCartographic(o),i.longitude>o.longitude?this.defaultExtent:{west:Cesium.Math.toDegrees(i.longitude),south:Cesium.Math.toDegrees(o.latitude),east:Cesium.Math.toDegrees(o.longitude),north:Cesium.Math.toDegrees(i.latitude)}):this.defaultExtent},e.$inject=["$rootScope"],e}();t.ZoomLevelService=r,angular.module("explorer.rockproperties.zoom",[]).factory("zoomLevelService",["$rootScope",function(t){return new e.zoom.ZoomLevelService(t)}])}(t=e.zoom||(e.zoom={}))}(rpComponents||(rpComponents={})),angular.module("explorer.rockproperties.templates",[]).run(["$templateCache",function(e){
e.put("rockprops/clip-ship.html",'\n<div ng-show="rocksClipShipVM.rocksClipShipService.step == \'startDraw\'">\n	<h6 class="dis-inline">\n		1.\n		<button ng-click="rocksClipShipVM.rocksClipShipService.startDraw()" style="padding: 5px 10px;border-radius: 3px;border: none;">\n			Click here\n		</button>\n		to select an area on the map <i class="fa fa-scissors" style="font-size: 16px;"></i></h6>\n</div>\n\n\n<div ng-show="rocksClipShipVM.rocksClipShipService.step == \'selectFeatures\'">\n\n	<h6 class="dis-inline">2. Select features to download:</h6>\n\n	<div>\n\n		<!-- if we have active property filters, use them instead -->\n		<p ng-show="hasAnyFilter">\n			<i class="fa fa-info-circle"></i> Current filters will be applied to the exported data.\n		</p>\n\n		<div ng-hide="hasAnyFilter">\n\n			<div style="padding: 5px; margin-top: 10px; background: #f0f0f0; border-radius: 3px;">\n				<label>\n					<input type="checkbox" ng-model="masterCheck" ng-disabled="hasPropertyFilter" ng-change="rocksClipShipVM.rocksFiltersService.setAllExportSelected(masterCheck)" />\n					{{ masterCheck ? \'Deselect\' : \'Select\' }} All\n				</label>\n			</div>\n\n			<label style="margin-left: 25px;" class="checkbox" ng-repeat="property in rocksClipShipVM.rocksFiltersService.exportProperties.filterOptions">\n				<input type="checkbox" value="property.isSelected" ng-model="property.isSelected" ng-checked="masterCheck" ng-disabled="hasPropertyFilter">\n				{{ property.name }}\n			</label>\n\n		</div>\n\n		<div style="margin: 20px 0px 20px 0px;">\n			<label title="Export Format">Export Format</label>\n			<select ng-change="rocksClipShipVM.rocksClipShipService.updateExportFormat(exportFormats.SelectedOption)"\n					ng-model="exportFormats.SelectedOption"\n					name="format"\n					ng-options="option for option in rocksClipShipVM.rocksClipShipService.exportFormats"\n					ng-class="form-control"\n					class="filter-input"\n					style="float: right; width: 160px;">\n				<option value="" class="">--select--</option>\n			</select>\n		</div>\n\n		<a ng-click="rocksClipShipVM.rocksClipShipService.openGeoserver()" style="font-size: 11px; margin-top: 20px; color: blue; text-decoration: underline;">\n			More Options via GeoServer Dashboard\n		</a>\n\n		<div style="margin-top: 20px;">\n			<button type="button" class="btn btn-default" ng-click="rocksClipShipVM.rocksClipShipService.step = \'startDraw\'" title="Cancel Download" style="width: 40%; float: left;">Cancel</button>\n			<button type="button"\n					class="btn btn-default focusMe"\n					ng-click="rocksClipShipVM.startClipShip()"\n					style="width: 40%; float: right"\n					title="Select one or more reference feature classes before continuing."\n					ng-disabled="(rocksClipShipVM.rocksFiltersService.exportProperties.filterOptions | noClipSelected) || (!rocksClipShipVM.rocksClipShipService.targetFormat)">Next</button>\n		</div>\n\n	</div>\n\n</div>\n\n<div ng-show="rocksClipShipVM.rocksClipShipService.step == \'download\'">\n\n	<h6>3. Data Export:</h6>\n\n	<div ng-hide="rocksClipShipVM.rocksQueryBuilderExport.loading">\n\n		<p ng-show="rocksClipShipVM.rocksClipShipService.targetFormat === \'application/json\'" style="margin-top: 40px;">\n			<i class="fa fa-info-circle"></i> Once json has loaded, save page as a .json file.\n		</p>\n\n		<p class="warning-block" style="margin-top: 20px;">\n			<i class="fa fa-info-circle"></i> Large data sets may take several minutes to export.\n		</p>\n\n		<a class="btn btn-default" target="_blank" href="{{rocksClipShipVM.rocksQueryBuilderExport.exportUrl}}" ng-click="rocksClipShipVM.rocksClipShipService.step = \'startDraw\'" style="width: 100%; margin-top: 30px;" role="button">\n			<i class="fa fa-download"></i> Download {{ rocksClipShipVM.rocksClipShipService.targetFormat }}\n		</a>\n\n		<a class="btn btn-default" href="javascript:;" ng-click="rocksClipShipVM.rocksClipShipService.step = \'selectFeatures\'" style="width: 100%; margin-top: 10px;" role="button">\n			<i class="fa fa-arrow-left"></i> Back\n		</a>\n\n	</div>\n\n</div>\n\n<div id="rock-clip-ship-loading" ng-show="rocksClipShipVM.rocksQueryBuilderExport.loading">\n	<p>Preparing Data..</p>\n</div>'),e.put("rockprops/cluster-filters.html",'\n<!--\n\nTODO plug into rock props filter service\n\n-->\n\n<h5>Filters:</h5>\n\n<div ng-repeat="filter in rocksClusterFilterVM.rocksFiltersService.filters" style="padding-top:7px;position:relative; overflow-x: hidden;overflow-y: auto;">\n\n	<label style="font-size: 11px;" title="{{filter.filterLabel}}">{{filter.filterLabel}}</label>\n	<select\n			ng-change="filterChanged(filter.filterType, filter.SelectedOption)"\n			ng-model="filter.SelectedOption"\n			name="filter.filterType"\n			ng-options="option as option for option in filter.filterOptions"\n			ng-class=\'form-control\'\n			class=\'filter-input\'\n			style="float:left;width:100%;position:relative;">\n		<option value="" selected>--select--</option>\n	</select>\n\n</div>\n\n<div style="text-align: center;">\n	<a class="btn btn-default" style="margin: 10px;" ng-click="applyFilters()" href="javascript:;" ng-disabled="!rocksClusterFilterVM.rocksPanelService.clustersEnabled">\n		<i class="fa fa-filter fa-lg"></i>\n		Apply\n	</a>\n\n	<a class="btn btn-default" style="margin: 10px;" ng-click="clearFilters()" href="javascript:;" ng-disabled="!rocksClusterFilterVM.rocksPanelService.clustersEnabled">\n		<i class="fa fa-remove fa-lg"></i>\n		Clear\n	</a>\n\n	<p ng-show="filterResultCount()" style="text-align: left; margin: 10px; font-size: 14px;">\n		<strong>Record Count: </strong>\n		14320\n	</p>\n</div>\n'),e.put("rockprops/cluster-summary.html",'<div id="clusterSummaryChart" ng-show="chartState.targetChartId == \'clusterSummaryChart\'">\n\n	<div class="btn-group" style="position: absolute;right: 10px;top: 10px;">\n		<button type="button" class="btn btn-default" title="Close charts" ng-click="clusterChartVM.clusterChartService.hideChart(); clusterChartVM.clusterService.clearHighlighted();">\n			<i class="fa fa-times-circle" role="presentation" style="font-size:16px; color:black"></i>\n		</button>\n	</div>\n\n	<div id="cluster-summary-chart-d3"></div>\n	<div id="cluster-summary-chart-loading"></div>\n\n</div>'),e.put("rockprops/control-panel.html",'<div>\n\n	<div class="rocks-accordion">\n		<div class="rocks-toggle-button" title="Show/hide cluster features">\n			<input type="checkbox" ng-model="controlPanelVM.rocksPanelService.clustersEnabled" ng-change="controlPanelVM.rocksPanelService.toggleClusters()" />\n		</div>\n		<button class="title" ng-click="controlPanelVM.setTargetPanel(\'clusterFeatures\')">\n			<i class="fa fa-{{ controlPanelVM.targetPanel == \'clusterFeatures\' ? \'minus\' : \'plus\' }}"></i>\n			Cluster Features\n		</button>\n	</div>\n	<div class="rocks-accordion-content" ng-show="controlPanelVM.targetPanel == \'clusterFeatures\'">\n\n		<rocks-cluster-filters></rocks-cluster-filters>\n\n	</div>\n\n	<div class="rocks-accordion">\n		<div class="rocks-toggle-button" title="Show/hide point features WMS layer">\n			<input type="checkbox" ng-model="controlPanelVM.rocksPanelService.pointsEnabled" ng-change="controlPanelVM.rocksPanelService.togglePoints()" />\n		</div>\n		<div class="title" ng-click="controlPanelVM.setTargetPanel(\'pointFeatures\')">\n			<i class="fa fa-{{ controlPanelVM.targetPanel == \'pointFeatures\' ? \'minus\' : \'plus\' }}"></i>\n			Point Features (WMS)\n		</div>\n	</div>\n\n	<div class="rocks-accordion-content" ng-show="controlPanelVM.targetPanel == \'pointFeatures\'">\n\n		<rocks-wms-points-legend></rocks-wms-points-legend>\n\n	</div>\n\n	<div class="rocks-accordion-content" ng-show="controlPanelVM.targetPanel == \'wmsInspector\'">\n\n		Inspector\n\n	</div>\n\n	<div class="rocks-accordion">\n		<div class="title w100" ng-click="controlPanelVM.setTargetPanel(\'clipShip\')">\n			<i class="fa fa-{{ controlPanelVM.targetPanel == \'clipShip\' ? \'minus\' : \'plus\' }}"></i>\n			Download Rock Property Data\n		</div>\n	</div>\n\n	<div class="rocks-accordion-content" ng-show="controlPanelVM.targetPanel == \'clipShip\'">\n\n		<rocks-clip-ship></rocks-clip-ship>\n\n	</div>\n\n</div>'),e.put("rockprops/wms-inspector-panel.html",'\n<div ng-show="wmsInspectorVM.wmsInspectorState.view == \'LAYERSELECT\'">\n\n	<p style="margin: 10px 0px;" tooltip="Approx 30m accuracy">\n		Select a layer to query:\n		<code>\n			{{wmsInspectorVM.wmsInspectorState.targetGeom.degrees.lat | number : 2}},\n			{{wmsInspectorVM.wmsInspectorState.targetGeom.degrees.lon | number : 2}}\n		</code>\n	</p>\n\n	<a\n		class="btn btn-default"\n		style="width: 100%; margin: 2px 0px"\n		ng-click="wmsInspectorVM.wmsInspectorService.queryRocks()"\n		href="javascript:;">\n		Rock Properties Data\n	</a>\n\n	<a\n		ng-repeat="feature in wmsInspectorVM.wmsInspectorService.features"\n		class="btn btn-default"\n	   	style="width: 100%; margin: 2px 0px"\n	   	ng-click="wmsInspectorVM.wmsInspectorService.queryFeature(feature)"\n	   	href="javascript:;">\n		{{feature.name}}\n	</a>\n\n	<a class="btn btn-default"\n	   style="width: 100%; margin-top: 20px"\n	   ng-click="wmsInspectorVM.wmsInspectorState.view = \'LEGEND\'"\n	   href="javascript:;">\n		<i class="fa fa-times fa-lg"></i>\n		Cancel\n	</a>\n\n</div>\n\n\n<div ng-show="wmsInspectorVM.wmsInspectorState.view == \'FEATUREINFO\'">\n\n	<div ng-show="wmsInspectorVM.wmsInspectorService.isLoading">\n		<div id="rocks-inspector-loading"></div>\n	</div>\n\n	<div ng-hide="wmsInspectorVM.wmsInspectorService.isLoading">\n\n		<p style="margin: 10px 0px;" tooltip="Approx 30m accuracy">\n			Feature Info for:\n			<code>\n				{{wmsInspectorVM.wmsInspectorState.targetGeom.degrees.lat | number : 2}},\n				{{wmsInspectorVM.wmsInspectorState.targetGeom.degrees.lon | number : 2}}\n			</code>\n		</p>\n\n		<!-- put html here.. -->\n		<div ng-bind-html="wmsInspectorVM.wmsInspectorService.featureInfo"></div>\n\n	</div>\n\n	<div>\n\n		<a class="btn btn-default"\n		   style="width: 49%; margin-top: 20px"\n		   ng-click="wmsInspectorVM.wmsInspectorState.view = \'LAYERSELECT\'"\n		   href="javascript:;">\n			<i class="fa fa-arrow-left fa-lg"></i>\n			Back\n		</a>\n\n		<a class="btn btn-default"\n		   style="width: 49%; margin-top: 20px"\n		   ng-click="wmsInspectorVM.wmsInspectorState.view = \'LEGEND\'"\n		   href="javascript:;">\n			<i class="fa fa-times fa-lg"></i>\n			Cancel\n		</a>\n\n	</div>\n\n</div>'),e.put("rockprops/wms-points-panel.html",'<div ng-show="rocksWmsPointsVM.wmsInspectorState.view == \'LEGEND\'">\n\n	<div style="padding: 5px 10px; margin: 0px 0px 10px -10px; background: #f0f0f0; border-radius: 3px;">\n		<label>\n			<input\n				type="checkbox"\n				ng-model="rocksWmsPointsVM.wmsPointsService.inspectorEnabled"\n				ng-change="rocksWmsPointsVM.wmsPointsService.togglePointInspector()"\n			/>\n			Click to inspect ({{ rocksWmsPointsVM.wmsPointsService.inspectorEnabled && rocksWmsPointsVM.rocksPanelService.pointsEnabled ? \'Active\' : \'Disabled\' }})\n		</label>\n	</div>\n\n	<div style="padding: 5px 10px; margin-left: -10px; background: #f0f0f0; border-radius: 3px;">\n		<label>\n			<input\n				type="checkbox"\n				ng-model="rocksWmsPointsVM.wmsPointsService.masterChecked"\n				ng-change="rocksWmsPointsVM.wmsPointsService.toggleChecked()"\n				ng-disabled="!rocksWmsPointsVM.rocksPanelService.pointsEnabled"/>\n			{{ rocksWmsPointsVM.wmsPointsService.masterChecked ? \'Deselect\' : \'Select\' }} all layers\n		</label>\n	</div>\n\n	<div ng-repeat="legend in rocksWmsPointsVM.wmsPointsService.legendData" class=\'rocks-points-legend-item\'>\n\n		<label>\n			<input\n			type="checkbox"\n			ng-model="legend.isSelected"\n			ng-disabled="!rocksWmsPointsVM.rocksPanelService.pointsEnabled" />\n			<img ng-src="{{legend.legendUrl}}" alt="{{legend}} legend icon" />\n		</label>\n\n	</div>\n\n	<a class="btn btn-default"\n	   style="width: 100%; margin-top: 20px"\n	   ng-click="rocksWmsPointsVM.wmsPointsService.updatePointsLayer()"\n	   ng-disabled="!rocksWmsPointsVM.rocksPanelService.pointsEnabled"\n	   href="javascript:;">\n		<i class="fa fa-refresh fa-lg"></i>\n		Update layers\n	</a>\n\n</div>\n\n<wms-inspector-panel></wms-inspector-panel>')}]);
//# sourceMappingURL=explorer-rock-properties-components.min.js.map
